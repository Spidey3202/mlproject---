Bin txnId = null;
Bin msgTypeId = null;
Bin fvaName = null;
Bin fvAddr = null;
Bin currStatusCode = null;
Bin currStatusDesc = null;
Bin trnRefNo = null;

// Initialize the columns list
List<Bin> columns = new ArrayList<>();

// Check each field and create a Bin if it is not blank, then add it to the columns list
if (StringUtils.isNotBlank(memberReqDTO.getTxnId())) {
    txnId = new Bin("TXNID", memberReqDTO.getTxnId());
    columns.add(txnId);
}
if (StringUtils.isNotBlank(memberReqDTO.getMsgTypeId())) {
    msgTypeId = new Bin("MSGTYPEID", memberReqDTO.getMsgTypeId());
    columns.add(msgTypeId);
}
if (StringUtils.isNotBlank(memberReqDTO.getFvaName())) {
    fvaName = new Bin("FVANAME", memberReqDTO.getFvaName());
    columns.add(fvaName);
}
if (StringUtils.isNotBlank(memberReqDTO.getFvAddr())) {
    fvAddr = new Bin("FVADDR", memberReqDTO.getFvAddr());
    columns.add(fvAddr);
}
if (StringUtils.isNotBlank(memberReqDTO.getCurrStatusCode())) {
    currStatusCode = new Bin("CURRSTATUSCODE", memberReqDTO.getCurrStatusCode());
    columns.add(currStatusCode);
}
if (StringUtils.isNotBlank(memberReqDTO.getCurrStatusDesc())) {
    currStatusDesc = new Bin("CURRSTATUSDESC", memberReqDTO.getCurrStatusDesc());
    columns.add(currStatusDesc);
}
if (StringUtils.isNotBlank(memberReqDTO.getTrnRefNo())) {
    trnRefNo = new Bin("TRNREFNO", memberReqDTO.getTrnRefNo());
    columns.add(trnRefNo);
}

// Perform the put operation into Aerospike
AerospikeClient aerospikeClient = new AerospikeClient("localhost", 3000); // Replace with actual Aerospike host and port
Key key = new Key("namespace", "set", "primaryKey"); // Replace with actual namespace, set, and primary key
aerospikeClient.put(null, key, columns.toArray(new Bin[0]));

// Close the Aerospike client connection
aerospikeClient.close();
