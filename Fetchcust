

import com.aerospike.client.AerospikeClient;
import com.aerospike.client.Host;
import com.aerospike.client.policy.ClientPolicy;
import com.aerospike.client.policy.Policy;
import com.aerospike.client.task.IndexTask;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;

@Configuration
public class AerospikeConfig {

    @Value("${aerospike.host}")
    private String host;

    @Value("${aerospike.port}")
    private int port;

    @Value("${aerospike.namespace}")
    private String namespace;

    @Bean
    public AerospikeClient aerospikeClient() {
        ClientPolicy clientPolicy = new ClientPolicy();
        Host[] hosts = new Host[1];
        hosts[0] = new Host(host, port);

        AerospikeClient client = new AerospikeClient(clientPolicy, hosts);

        Policy policy = new Policy();

        // Create the first index
        IndexTask task1 = client.createIndex(policy, namespace, "TABLET", "amount_idx", "amount", IndexType.NUMERIC);
        // Create the second index
        IndexTask task2 = client.createIndex(policy, namespace, "TABLET", "value_idx", "value", IndexType.NUMERIC);

        // Wait for the indexes to be created
        task1.waitTillComplete();
        task2.waitTillComplete();

        return client;
    }
}

import com.aerospike.client.AerospikeClient;
import com.aerospike.client.Record;
import com.aerospike.client.policy.QueryPolicy;
import com.aerospike.client.query.Filter;
import com.aerospike.client.query.RecordSet;
import com.aerospike.client.query.Statement;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.core.env.Environment;
import org.springframework.stereotype.Service;

import java.util.ArrayList;
import java.util.List;

@Service
public class AerospikeService {

    @Autowired
    private AerospikeClient aerospikeClient;

    @Autowired
    private Environment env;

    public List<String> getBinsBySecondaryIndex(String binName, String secondaryIndex) {
        List<String> bins = new ArrayList<>();
        Statement stmt = new Statement();
        stmt.setNamespace(env.getProperty("aerospike.namespace"));
        stmt.setSetName("TABLET");
        stmt.setFilter(Filter.equal(binName, secondaryIndex));

        try (RecordSet rs = aerospikeClient.query(new QueryPolicy(), stmt)) {
            while (rs.next()) {
                Record record = rs.getRecord();
                bins.add(record.bins.toString());
                // Uncomment the following line to print each record's bins to the console
                // System.out.println("Record: " + record.bins.toString());
            }
        } catch (Exception e) {
            // Handle exception
            e.printStackTrace();
        }

        return bins;
    }
}


